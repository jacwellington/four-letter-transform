
[1mFrom:[0m /home/jwellington/programming/four-letter-words/flw_breadth.rb @ line 31 WordTransformBfs#transform_a_word_depth_first:

    [1;34m19[0m: [32mdef[0m [1;34mtransform_a_word_depth_first[0m(word_start, word_end)
    [1;34m20[0m:   [1;30m# Check for user errors[0m
    [1;34m21[0m:   [32munless[0m word_start.length == [1;34m4[0m [32mand[0m word_end.length == [1;34m4[0m [32mand[0m @four_letter_words.include?(word_end)
    [1;34m22[0m:     raise [1;34;4mArgumentError[0m, [31m[1;31m"[0m[31mEnd word is not an English, four letter word.[1;31m"[0m[31m[0m
    [1;34m23[0m:   [32mend[0m
    [1;34m24[0m: 
    [1;34m25[0m:   [1;30m# Find paths[0m
    [1;34m26[0m:   finished_paths = breadth_first_find_shortest_paths(word_start, word_end)
    [1;34m27[0m: 
    [1;34m28[0m:   [1;30m# Return sorted paths[0m
    [1;34m29[0m:   [32munless[0m finished_paths.empty?
    [1;34m30[0m:     sorted_paths = finished_paths.sort { |x,y| x.length <=> y.length}
 => [1;34m31[0m:     binding.pry
    [1;34m32[0m:     [32mreturn[0m [word_start].concat sorted_paths.first
    [1;34m33[0m:   [32melse[0m
    [1;34m34[0m:     [32mreturn[0m []
    [1;34m35[0m:   [32mend[0m
    [1;34m36[0m: [32mend[0m

